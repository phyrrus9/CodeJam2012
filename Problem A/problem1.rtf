{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red156\green156\blue156;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww25400\viewh13600\viewkind0
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls1\ilvl0
\f0\fs24 \cf0 \cb2 {\listtext	1.	}Problem\cf3 \
\ls1\ilvl0\cf0 {\listtext	2.	}\'a0\cf3 \
\ls1\ilvl0\cf0 {\listtext	3.	}We have come up with the best possible language here at Google, called Googlerese. To translate text into Googlerese, we take any message and replace each English letter with another English letter. This mapping is one-to-one and onto, which means that the same input letter always gets replaced with the same output letter, and different input letters always get replaced with different output letters. A letter may be replaced by itself. Spaces are left as-is.\cf3 \
\ls1\ilvl0\cf0 {\listtext	4.	}\'a0\cf3 \
\ls1\ilvl0\cf0 {\listtext	5.	}For example (and here is a hint!), our awesome translation algorithm includes the following three mappings: 'a' -> 'y', 'o' -> 'e', and 'z' -> 'q'. This means that "a zoo" will become "y qee".\cf3 \
\ls1\ilvl0\cf0 {\listtext	6.	}\'a0\cf3 \
\ls1\ilvl0\cf0 {\listtext	7.	}Googlerese is based on the best possible replacement mapping, and we will never change it. It will always be the same. In every test case. We will not tell you the rest of our mapping because that would make the problem too easy, but there are a few examples below that may help.\cf3 \
\ls1\ilvl0\cf0 {\listtext	8.	}\'a0\cf3 \
\ls1\ilvl0\cf0 {\listtext	9.	}Given some text in Googlerese, can you translate it to back to normal text?\cf3 \
\ls1\ilvl0\cf0 {\listtext	10.	}\'a0\cf3 \
\ls1\ilvl0\cf0 {\listtext	11.	}Solving this problem\cf3 \
\ls1\ilvl0\cf0 {\listtext	12.	}\'a0\cf3 \
\ls1\ilvl0\cf0 {\listtext	13.	}Usually, Google Code Jam problems have 1 Small input and 1 Large input. This problem has only 1 Small input. Once you have solved the Small input, you have finished solving this problem.\cf3 \
\ls1\ilvl0\cf0 {\listtext	14.	}\'a0\cf3 \
\ls1\ilvl0\cf0 {\listtext	15.	}Input\cf3 \
\ls1\ilvl0\cf0 {\listtext	16.	}\'a0\cf3 \
\ls1\ilvl0\cf0 {\listtext	17.	}The first line of the input gives the number of test cases, T. T test cases follow, one per line.\cf3 \
\ls1\ilvl0\cf0 {\listtext	18.	}\'a0\cf3 \
\ls1\ilvl0\cf0 {\listtext	19.	}Each line consists of a string G in Googlerese, made up of one or more words containing the letters 'a' - 'z'. There will be exactly one space (' ') character between consecutive words and no spaces at the beginning or at the end of any line.\cf3 \
\ls1\ilvl0\cf0 {\listtext	20.	}\'a0\cf3 \
\ls1\ilvl0\cf0 {\listtext	21.	}Output\cf3 \
\ls1\ilvl0\cf0 {\listtext	22.	}\'a0\cf3 \
\ls1\ilvl0\cf0 {\listtext	23.	}For each test case, output one line containing "Case #X: S" where X is the case number and S is the string that becomes G in Googlerese.\cf3 \
\ls1\ilvl0\cf0 {\listtext	24.	}\'a0\cf3 \
\ls1\ilvl0\cf0 {\listtext	25.	}Limits\cf3 \
\ls1\ilvl0\cf0 {\listtext	26.	}\'a0\cf3 \
\ls1\ilvl0\cf0 {\listtext	27.	}1 \uc0\u8804  T \u8804  30.\cf3 \
\ls1\ilvl0\cf0 {\listtext	28.	}G contains at most 100 characters.\cf3 \
\ls1\ilvl0\cf0 {\listtext	29.	}None of the text is guaranteed to be valid English.\cf3 \
\ls1\ilvl0\cf0 {\listtext	30.	}Sample\cf3 \
\ls1\ilvl0\cf0 {\listtext	31.	}\'a0\cf3 \
\ls1\ilvl0\cf0 {\listtext	32.	}Input\cf3 \
\ls1\ilvl0\cf0 {\listtext	33.	}3\cf3 \
\ls1\ilvl0\cf0 {\listtext	34.	}ejp mysljylc kd kxveddknmc re jsicpdrysi\cf3 \
\ls1\ilvl0\cf0 {\listtext	35.	}rbcpc ypc rtcsra dkh wyfrepkym veddknkmkrkcd\cf3 \
\ls1\ilvl0\cf0 {\listtext	36.	}de kr kd eoya kw aej tysr re ujdr lkgc jv\cf3 \
\ls1\ilvl0\cf0 {\listtext	37.	}\'a0\cf3 \
\ls1\ilvl0\cf0 {\listtext	38.	}\'a0\cf3 \
\ls1\ilvl0\cf0 {\listtext	39.	}Output\cf3 \
\ls1\ilvl0\cf0 {\listtext	40.	}Case #1: our language is impossible to understand\cf3 \
\ls1\ilvl0\cf0 {\listtext	41.	}Case #2: there are twenty six factorial possibilities\cf3 \
\ls1\ilvl0\cf0 {\listtext	42.	}Case #3: so it is okay if you want to just give up\cf3 \
}